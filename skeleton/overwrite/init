#!/bin/sh
export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
export DISPLAY=:0
export GTK_IM_MODULE="scim"

	/bin/mount -t sysfs none /sys -onodev,noexec,nosuid
	/bin/mount -t proc none /proc -onodev,noexec,nosuid
	ln -sf /proc/mounts /etc/mtab

	for x in $(cat /proc/cmdline); do
		case $x in
			screen=*)
				export RES=${x#screen=}
			;;
			lang=*)
				export UILANG=${x#lang=}
			;;
			kmap=*)
				export KEYMAP=${x#kmap=}
			;;
			url=*)
				export URL=${x#url=}
			;;
		esac
	done 

	# keymap
	if [ ! -z $KEYMAP ] && [ -e /usr/share/keymap/$KEYMAP.kmap ]; then 
		loadkmap < /usr/share/keymap/$KEYMAP.kmap
		echo "pref(\"xpud.keymap\", \""$KEYMAP"\");" >> /usr/share/plate/defaults/preferences/prefs.js
	fi

	PLATE=/usr/share/plate/chrome/content
	# kiosk mode
	if [ ! -z $URL ]; then
		/bin/sed -e s/index.*html/kiosk.html/g $PLATE/main.default > $PLATE/main.xul 
		/bin/sed -e s#KIOSK_URL#$URL#g $PLATE/kiosk.html > $PLATE/kiosk.html.tmp 
		/bin/mv $PLATE/kiosk.html.tmp $PLATE/kiosk.html
	else
		# plate locale
		if [ ! -z $UILANG ]; then 
			UILANG=$UILANG
		else
			UILANG=en
		fi
		/bin/mv $PLATE/main.default $PLATE/main.xul
		echo "pref(\"xpud.locale\", \""$UILANG"\");" >> /usr/share/plate/defaults/preferences/prefs.js
		export LANG=$UILANG
	fi 
	
	# init hook
	find /etc/init.d/ -type f -exec {} \; 
	
	# Get information from EDID, 915resolution and Xvesa
	/usr/bin/get-edid 1> /tmp/edid.out 2> /tmp/edid.log
	/usr/sbin/915resolution -l &> /tmp/915res.log
	/usr/local/bin/Xvesa -listmodes 2> /tmp/xvmodes.log
	# Try to find correct screen resolution
	echo "Trying to detect your screen resolution..."
	if [ -z $RES ]; then
		# parse edid
		VMODE=`/usr/bin/parse-edid < /tmp/edid.out | grep [0-9].*x[0-9]* | cut -d \" -f 2`
		# if panel size was found - set the screen resolution
		if [ ! -z $VMODE ]; then
			echo "Screen resolution was found: "$VMODE
			VRES=`echo $VMODE"x24"`
		else
			echo "Failed. Defaulting to 1024x600"
			VRES=1024x600x24
		fi
	else
		# be sure to set resolution - it will be used in patching
		echo "Resolution was set on boot: "$RES
		VRES=$RES	
	fi
	# Patch resolution if needed
	# if resolution is not in Xvesa modes
	if ! grep $VRES /tmp/xvmodes.log ; then
		# if resolution is available in 915resolution modes
		if grep Mode /tmp/915res.log ; then
			echo "Trying to patch..."
			# try to patch needed video mode
			/usr/sbin/915resolution 38 `echo ${VRES/x/ }`
			/usr/sbin/915resolution -l > /tmp/915.tmp
			# if resolution was set successfully
			TMPRES=`echo $VRES | cut -d x -f 1,2`
			if ! grep -q $TMPRES /tmp/915.tmp ; then
				echo "Patching failed, back to default resolution"
				VRES=1024x768x24
			fi
		else
			echo "Patching is not supported"
			VRES=1024x768x24
		fi
	else
		# if resolution was not set in earlier step - set it to default
		if [ -z $VRES ]; then
			VRES=1024x768x24
		fi
	fi
	# Set resolution
	export RES=$VRES
	echo "pref(\"xpud.videomode\", \""$RES"\");" >> /usr/share/plate/defaults/preferences/prefs.js
	echo "Resolution will be set as "$RES
	
	if ! grep -q nox /proc/cmdline ; then
	# start X server
	/usr/local/bin/Xvesa :0 -ac -shadow -screen $RES -br -mouse mouse,/dev/input/mice &
	/bin/sleep 0.1
	
	# start plate
	/usr/bin/firefox -app /usr/share/plate/application.ini &
	/sbin/session &
	fi
	
	/bin/sh
